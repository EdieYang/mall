package com.linkpets.dao;

import com.alibaba.fastjson.JSONObject;
import com.linkpets.model.CommodityImg;

import java.util.List;

import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.ResultType;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface CommodityImgMapper {
    /**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table commodity_img
	 * @mbg.generated  Tue Oct 08 11:17:45 GMT+08:00 2019
	 */
	@Insert({ "insert into commodity_img (pk_id, commodity_id, ", "img_name, img_url, ", "del_flag)",
			"values (#{pkId,jdbcType=INTEGER}, #{commodityId,jdbcType=VARCHAR}, ",
			"#{imgName,jdbcType=VARCHAR}, #{imgUrl,jdbcType=VARCHAR}, ", "#{delFlag,jdbcType=VARCHAR})" })
	int insert(CommodityImg record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table commodity_img
	 * @mbg.generated  Tue Oct 08 11:17:45 GMT+08:00 2019
	 */
	int insertSelective(CommodityImg record);

	@Select({
        "select",
        "pk_id, commodity_id, img_name, img_url, del_flag",
        "from commodity_img",
        "where commodity_id = #{commodityId,jdbcType=VARCHAR}"
    })
    @ResultType(JSONObject.class)
    List<JSONObject> getImgList(String commodityId);
	
	@Update({
        "update commodity_img",
        "set del_flag = '1'",
        "where del_flag = '0' and commodity_id = #{commodityId,jdbcType=VARCHAR}"
    })
	void delImg(String commodityId);
}